{"version":3,"sources":["components/Balance.js","components/Header.js","components/IncomeExpenses.js","action-types/index.js","components/TransactionList.js","actions/index.js","components/AddTransaction.js","App.js","reducer/index.js","store/index.js","index.js"],"names":["connect","transactionList","reduce","sum","transaction","amount","state","props","className","filter","ADD_TRANSACTION_FULLFILLED","DELETE_TRANSACTION","mapDispatchToProps","deleteTransaction","id","console","log","dispatch","type","payload","map","text","onClick","Add","money","useState","setAmount","setText","htmlFor","onChange","e","target","value","placeholder","preventDefault","App","initialState","reducer","action","Date","getTime","store","createStore","applyMiddleware","thunk","promise","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2396c2e9.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\n const Balance = ({transactionList}) => {\n    return (\n        <>\n            <h4>Your Balance</h4>\n         <h1>{\n            transactionList\n            .reduce((sum,transaction)=>sum+transaction.amount,0)\n          }</h1>\n\n        </>\n    )\n}\n\nconst mapStateToProps = ({transactionList}) => ({\n    transactionList\n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Balance)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n const Header = (props) => {\n    return (\n        \n           <h2> Expense Tracker</h2>\n    \n    )\n}\n\nconst mapStateToProps = (state) => ({\n    \n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n const IncomeExpenses = ({transactionList}) => {\n   \n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p  className=\"money plus\">{\n            transactionList\n            .filter(transaction=>transaction.amount>=0)\n            .reduce((sum,transaction)=>sum+transaction.amount,0)\n          }</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p  className=\"money minus\">{\n            transactionList\n            .filter(transaction=>transaction.amount<0)\n            .reduce((sum,transaction)=>sum+transaction.amount,0)\n          }</p>\n        </div>\n      </div>\n    )\n}\n\nconst mapStateToProps = ({transactionList}) => ({\n    transactionList\n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IncomeExpenses)\n","export const ADD_TRANSACTION_FULLFILLED='ADD_TRANSACTION_FULLFILLED'\nexport const DELETE_TRANSACTION='DELETE_TRANSACTION'","import React from 'react'\nimport { connect } from 'react-redux'\nimport {deleteTransaction} from '../actions'\n const TransactionList = ({transactionList,deleteTransaction}) => {\n    return (\n        <>\n             <h3>History</h3>\n      <ul  className=\"list\">\n         {transactionList.map(transaction=>(\n           <li  key={transaction.id} className=\"minus\">\n           {transaction.text} <span>{transaction.amount}</span><button onClick={()=>deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n         </li> \n         ))}\n      </ul>\n        </>\n    )\n}\n\nconst mapStateToProps = ({transactionList}) => ({\n    transactionList\n})\n\nconst mapDispatchToProps = {\n    deleteTransaction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList)\n","import { ADD_TRANSACTION_FULLFILLED,DELETE_TRANSACTION } from \"../action-types\";\n\n\nexport function Add(text,money){\n    return  dispatch=>dispatch({type:ADD_TRANSACTION_FULLFILLED,payload:{text,money}})\n}\nexport function deleteTransaction(id){\n    console.log('erdal')\n    return dispatch=>dispatch({\n        type:DELETE_TRANSACTION,\n        payload:id\n    })\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {Add} from '../actions'\n const AddTransaction = (props) => {\n    const[amount,setAmount]=useState(0)\n    const [text,setText]=useState('')\n    const handleClick=(e)=>{\n      e.preventDefault()\n      \n      if(text&&amount){\n        props.Add(text,amount)\n      }\n      setAmount('')\n      setText('')\n    }\n   \n    return (\n        <>\n              <h3>Add new transaction</h3>\n      <form >\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\"onChange={(e)=>setText(e.target.value)} value={text} placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label\n          >\n          <input type=\"number\" value={amount} onChange={(e)=>setAmount(e.target.value)}  placeholder=\"Enter amount...\" />\n        </div>\n        <button onClick={handleClick} className=\"btn\">Add transaction</button>\n      </form>   \n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    \n})\n\nconst mapDispatchToProps = {\n   Add\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTransaction)\n","import './App.css';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from  './components/AddTransaction';\n\nfunction App() {\n  return (\n    <div>\n     <Header/>\n     <div className=\"container\">\n       <Balance/>\n       <IncomeExpenses/>\n       <TransactionList/>\n      <AddTransaction/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {ADD_TRANSACTION_FULLFILLED, DELETE_TRANSACTION} from '../action-types'\n\nconst initialState = {\n    transactionList:[\n          { id: 1, text: 'Flower', amount: -20 },\n  { id: 2, text: 'Salary', amount: 300 },\n  { id: 3, text: 'Book', amount: -10 },\n  { id: 4, text: 'Camera', amount: 150 }\n    ]\n}\n\nfunction reducer (state = initialState, action)  {\n    switch (action.type) {\n\n        case ADD_TRANSACTION_FULLFILLED:\n            console.log(action.payload)\n            return {...state,\n                transactionList:[\n                    ...state.transactionList,\n                    {\n                        id:new Date().getTime(),\n                        text:action.payload.text,\n                        amount:(+action.payload.money)\n                    }\n                ]}\n        case DELETE_TRANSACTION:\n            console.log('erdal')\n            return {\n                ...state,\n                transactionList:state.transactionList.filter(transaction=>transaction.id!==action.payload)\n            }\n    default:\n        return state\n    }\n}\nexport default reducer","import { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport promise from 'redux-promise-middleware'\nimport thunk from 'redux-thunk'\nimport reducer from '../reducer'\n\nconst store=createStore(reducer,applyMiddleware(thunk,promise,logger))\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}